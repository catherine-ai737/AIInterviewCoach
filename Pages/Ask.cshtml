@page
@model AIInterviewCoach.Pages.AskModel
@{
    ViewData["Title"] = "Interview Session";
}

<h1 class="text-2xl font-bold mb-4 text-center">Interview Question @Model.CurrentIndex + 1 of @Model.TotalQuestions</h1>

@if (Model.Question != null)
{
    <form method="post" class="max-w-2xl mx-auto bg-white p-6 shadow-md rounded-md">
        <div class="mb-4">
            <label class="block mb-2 text-lg font-semibold">@Model.Question.QuestionText</label>
            <textarea id="answer" name="UserAnswer" rows="5" class="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400" required></textarea>
            
            <button type="button" onclick="startMic()" class="mt-3 bg-gray-700 hover:bg-gray-800 text-white px-4 py-2 rounded-md shadow-sm">
                🎙 Speak Answer
            </button>
            <p id="mic-status" class="text-sm text-blue-500 mt-2"></p>
        </div>

        <div class="text-center">
            <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg shadow-md">
                Submit Answer
            </button>
        </div>
    </form>
}
else
{
    <p class="text-center text-green-600 text-lg mt-10 font-semibold">
        Interview completed! <a href="/Result" class="underline text-blue-600">View Results</a>
    </p>
}

@section Scripts {
<script>
    const micStatus = document.getElementById("mic-status");
    const answerBox = document.getElementById("answer");

    function startMic() {
        micStatus.textContent = "🎤 Listening...";
        
        const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
        recognition.lang = 'en-US';
        recognition.interimResults = false;
        recognition.maxAlternatives = 1;

        recognition.start();

        recognition.onresult = (event) => {
            const speechResult = event.results[0][0].transcript;
            answerBox.value = speechResult;
            micStatus.textContent = "✅ Transcribed successfully!";
        };

        recognition.onerror = (event) => {
            micStatus.textContent = '❌ Error: ' + event.error;
        };

        recognition.onend = () => {
            micStatus.textContent += " (Done)";
        };
    }
</script>
}
